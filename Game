class Game:
    def __init__(self):
        self.players = []
        self.is_night = False
        self.day_count = 0

    def add_player(self, character):
        self.players.append(character)

    def start_night(self):
        self.is_night = True
        self.day_count += 1
        print(f"Night {self.day_count} begins.")
        for player in self.players:
            if player.alive and not player.imprisoned:
                player.action(self.choose_target(player))

    def choose_target(self, player):
        import random
        return random.choice([p for p in self.players if p != player and p.alive])

    def start_day(self):
        self.is_night = False
        print(f"Day {self.day_count} begins.")
        for player in self.players:
            player.imprisoned = False
        self.vote()


    def get_vote(self, player):
        """ Get a vote from the given player. Currently, it selects a target randomly. """
        import random
        # Choose from other alive players except the one who is voting
        possible_targets = [p.name for p in self.players if p.alive and p.name != player.name]
        return random.choice(possible_targets)

    def vote(self):
        """ Conduct the voting process among the players. """
        print("Voting time!")
        # Initialize vote counts for each player
        votes = {player.name: 0 for player in self.players if player.alive}

        # Each alive player casts a vote
        for player in self.players:
            if player.alive:
                voted_player = self.get_vote(player)
                votes[voted_player] += 1
                print(f"{player.name} voted for {voted_player}")

        # Determine who got the most votes
        eliminated_player = max(votes, key=votes.get)
        self.eliminate_player(eliminated_player)

    def eliminate_player(self, player_name):
        """ Eliminate the player with the given name from the game. """
        for player in self.players:
            if player.name == player_name:
                player.alive = False
                print(f"{player.name} has been eliminated from the game.")
                break


    def check_win_conditions(self):
        good_alive = [player for player in self.players if player.role != "Evil" and player.alive]
        evil_alive = [player for player in self.players if player.role == "Evil" and player.alive]

        if not evil_alive:
            print("Good characters win!")
            return True
        elif len(evil_alive) >= len(good_alive):
            print("Evil characters win!")
            return True
        return False

    def start_game(self):
        while not self.check_win_conditions():
            self.start_day()
            self.start_night()
        print("Game Over")

